library(stringr)
library(geosphere)
library(leaflet)
library(magick)
library(metro)
library(gtfstools)
city <- "NYC"        #DC or NYC
round_no <- 3
google_sheet_link<-"https://docs.google.com/spreadsheets/d/188wl-XhzJ0fz0TCU9zHMOKmARJes0_Is-VX1b9NZgAs/edit?usp=sharing"
pano<-"off" #on or off to save panorama pictures of locations
auto_run<-"yes"
at_large_percent<-1
downtown_percent<-0
greater_central_percent<-0
metro_percent<-0
metro_distance<-100 #distance from metro stations, in feet
manhattan_percent<-0
brooklyn_percent<-0
queens_percent<-0
bronx_percent<-0
subway_percent<-1
subway_distance<-300 #distance from subway stations, in feet
code_base<-paste0("C:/Users/jwest/github/geoguessr_cities/")
output_location<-paste0("C:/Users/jwest/github/geoguessr_cities/",city,"/output/")
if (auto_run=="yes"){
source(paste0(code_base,"01_borders.R"))
source(paste0(code_base,"02_locations.R"))
source(paste0(code_base,"03_metadata.R"))
source(paste0(code_base,"04_images.R"))
}
View(locations)
locations$location[1]
if (city=="DC"){
max_dist<-73000
}
if (city=="NYC"){
max_dist<-130000
}
answers<-read_csv(paste0(output_location,"Round ",round_no,"/locations.csv"))
guesses <- read_sheet(google_sheet_link)%>%
filter(round==round_no)%>%
group_by(team_name,location)%>%
filter(datetime==max(datetime))%>%
ungroup()
score_by_location<-answers%>%
right_join(guesses,by=c("seqnum"="location"))%>%
mutate(distance = distHaversine(cbind(longitude, latitude), cbind(longitude_guess, latitude_guess)) * 3.28084)%>%
mutate(score=round(5000 * exp(-10 * distance / max_dist),0))%>%
mutate(distance_label=ifelse(
distance<5280,paste0(round(distance,0)," ft"),
paste0(round(distance/5280,1)," mi")))
score_by_team<-score_by_location%>%
group_by(team_name)%>%
summarise(score=sum(score,na.rm=T))
write_csv(score_by_location, paste0(output_location,"Round ",round_no,"/results by location.csv"))
write_csv(score_by_team, paste0(output_location,"Round ",round_no,"/results by team.csv"))
if (round_no==1){
scores_cumulative<-score_by_team%>%
group_by(team_name)%>%
summarise(cumulative_score=sum(score,na.rm=T))%>%
arrange(desc(cumulative_score))
}
if (round_no==2){
score_round1<-read_csv(paste0(output_location,"Round ","1","/results by team.csv"))
scores_cumulative<-score_by_team%>%
bind_rows(score_round1)%>%
group_by(team_name)%>%
summarise(cumulative_score=sum(score,na.rm=T))%>%
arrange(desc(cumulative_score))
}
if (round_no==3){
score_round1<-read_csv(paste0(output_location,"Round ","1","/results by team.csv"))
score_round2<-read_csv(paste0(output_location,"Round ","2","/results by team.csv"))
scores_cumulative<-score_by_team%>%
bind_rows(score_round1)%>%
bind_rows(score_round2)%>%
group_by(team_name)%>%
summarise(cumulative_score=sum(score,na.rm=T))%>%
arrange(desc(cumulative_score))
}
score_by_location<-read_csv(paste0(output_location,"Round ",round_no,"/results by location.csv"))
seqnum_list <- unique(score_by_location$seqnum)
for (i in 1:length(seqnum_list)){
filtered_data <- score_by_location %>% filter(seqnum == seqnum_list[i])
# Create a leaflet map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)
# Add lines connecting each guess to its corresponding actual coordinate
for (i in 1:nrow(filtered_data)) {
map <- map %>%
addPolylines(
lng = c(filtered_data$longitude[i], filtered_data$longitude_guess[i]),
lat = c(filtered_data$latitude[i], filtered_data$latitude_guess[i]),
color = "black", opacity = 1, weight=1
)
}
# Add points for actual coordinates
map <- map %>%
addCircleMarkers(
data = filtered_data,
lng = ~longitude, lat = ~latitude,
color = "yellow", stroke = TRUE, weight = 4,
fillColor = "black", fillOpacity = 1, radius = 5,
popup = ~paste("Actual location ", max(filtered_data$seqnum))
)
# Add points for guessed coordinates
map <- map %>%
addCircleMarkers(
data = filtered_data,
lng = ~longitude_guess, lat = ~latitude_guess,
color = "black", stroke = TRUE, weight = 2,
fillColor = "red", fillOpacity = 1, radius = 5,
popup = ~paste(team_name,
"<br>","Distance: ",distance_label,
"<br>","Score: ",score)
)
if (city=="DC"){
map<-map%>%
setView(lng = -77.0369, lat = 38.9072, zoom = 11)
}
if (city=="NYC"){
map<-map%>%
setView(lng = -73.9663, lat = 40.7076, zoom = 10)
}
# Render the map
print(max(filtered_data$seqnum))
print(map)
}
View(scores_cumulative)
View(locations)
library(tibble)
library(dplyr)
library(readr)
library(sf)
library(httr)
library(jsonlite)
library(purrr)
library(tidyverse)
library(janitor)
library(googlesheets4)
library(stringr)
library(geosphere)
library(leaflet)
library(magick)
library(metro)
library(gtfstools)
city <- "NYC"        #DC or NYC
round_no <- 1
google_sheet_link<-"https://docs.google.com/spreadsheets/d/188wl-XhzJ0fz0TCU9zHMOKmARJes0_Is-VX1b9NZgAs/edit?usp=sharing"
pano<-"off" #on or off to save panorama pictures of locations
auto_run<-"yes"
at_large_percent<-0
downtown_percent<-.7
greater_central_percent<-.3
metro_percent<-0
metro_distance<-100 #distance from metro stations, in feet
manhattan_percent<-.43
brooklyn_percent<-.32
queens_percent<-.12
bronx_percent<-.03
subway_percent<-.10
subway_distance<-100 #distance from subway stations, in feet
code_base<-paste0("C:/Users/jwest/github/geoguessr_cities/")
output_location<-paste0("C:/Users/jwest/github/geoguessr_cities/",city,"/output/")
if (auto_run=="yes"){
source(paste0(code_base,"01_borders.R"))
source(paste0(code_base,"02_locations.R"))
source(paste0(code_base,"03_metadata.R"))
source(paste0(code_base,"04_images.R"))
}
library(tibble)
library(dplyr)
library(readr)
library(sf)
library(httr)
library(jsonlite)
library(purrr)
library(tidyverse)
library(janitor)
library(googlesheets4)
library(stringr)
library(geosphere)
library(leaflet)
library(magick)
library(metro)
library(gtfstools)
city <- "DC"        #DC or NYC
round_no <- 1
google_sheet_link<-"https://docs.google.com/spreadsheets/d/188wl-XhzJ0fz0TCU9zHMOKmARJes0_Is-VX1b9NZgAs/edit?usp=sharing"
pano<-"off" #on or off to save panorama pictures of locations
auto_run<-"yes"
at_large_percent<-0
downtown_percent<-.7
greater_central_percent<-.3
metro_percent<-0
metro_distance<-100 #distance from metro stations, in feet
manhattan_percent<-.43
brooklyn_percent<-.32
queens_percent<-.12
bronx_percent<-.03
subway_percent<-.10
subway_distance<-100 #distance from subway stations, in feet
code_base<-paste0("C:/Users/jwest/github/geoguessr_cities/")
output_location<-paste0("C:/Users/jwest/github/geoguessr_cities/",city,"/output/")
if (auto_run=="yes"){
source(paste0(code_base,"01_borders.R"))
source(paste0(code_base,"02_locations.R"))
source(paste0(code_base,"03_metadata.R"))
source(paste0(code_base,"04_images.R"))
}
library(tibble)
library(dplyr)
library(readr)
library(sf)
library(httr)
library(jsonlite)
library(purrr)
library(tidyverse)
library(janitor)
library(googlesheets4)
library(stringr)
library(geosphere)
library(leaflet)
library(magick)
library(metro)
library(gtfstools)
city <- "DC"        #DC or NYC
round_no <- 1
google_sheet_link<-"https://docs.google.com/spreadsheets/d/188wl-XhzJ0fz0TCU9zHMOKmARJes0_Is-VX1b9NZgAs/edit?usp=sharing"
pano<-"off" #on or off to save panorama pictures of locations
auto_run<-"yes"
at_large_percent<-0
downtown_percent<-.7
greater_central_percent<-.3
metro_percent<-0
metro_distance<-100 #distance from metro stations, in feet
manhattan_percent<-.43
brooklyn_percent<-.32
queens_percent<-.12
bronx_percent<-.03
subway_percent<-.10
subway_distance<-100 #distance from subway stations, in feet
code_base<-paste0("C:/Users/jwest/github/geoguessr_cities/")
output_location<-paste0("C:/Users/jwest/github/geoguessr_cities/",city,"/output/")
if (auto_run=="yes"){
source(paste0(code_base,"01_borders.R"))
source(paste0(code_base,"02_locations.R"))
source(paste0(code_base,"03_metadata.R"))
source(paste0(code_base,"04_images.R"))
}
library(tibble)
library(dplyr)
library(readr)
library(sf)
library(httr)
library(jsonlite)
library(purrr)
library(tidyverse)
library(janitor)
library(googlesheets4)
library(stringr)
library(geosphere)
library(leaflet)
library(magick)
library(metro)
library(gtfstools)
city <- "DC"        #DC or NYC
round_no <- 1
google_sheet_link<-"https://docs.google.com/spreadsheets/d/188wl-XhzJ0fz0TCU9zHMOKmARJes0_Is-VX1b9NZgAs/edit?usp=sharing"
pano<-"off" #on or off to save panorama pictures of locations
auto_run<-"yes"
at_large_percent<-0
downtown_percent<-.7
greater_central_percent<-.3
metro_percent<-0
metro_distance<-100 #distance from metro stations, in feet
manhattan_percent<-.43
brooklyn_percent<-.32
queens_percent<-.12
bronx_percent<-.03
subway_percent<-.10
subway_distance<-100 #distance from subway stations, in feet
code_base<-paste0("C:/Users/jwest/github/geoguessr_cities/")
output_location<-paste0("C:/Users/jwest/github/geoguessr_cities/",city,"/output/")
if (auto_run=="yes"){
source(paste0(code_base,"01_borders.R"))
source(paste0(code_base,"02_locations.R"))
source(paste0(code_base,"03_metadata.R"))
source(paste0(code_base,"04_images.R"))
}
library(tibble)
library(dplyr)
library(readr)
library(sf)
library(httr)
library(jsonlite)
library(purrr)
library(tidyverse)
library(janitor)
library(googlesheets4)
library(stringr)
library(geosphere)
library(leaflet)
library(magick)
library(metro)
library(gtfstools)
city <- "DC"        #DC or NYC
round_no <- 1
google_sheet_link<-"https://docs.google.com/spreadsheets/d/188wl-XhzJ0fz0TCU9zHMOKmARJes0_Is-VX1b9NZgAs/edit?usp=sharing"
pano<-"off" #on or off to save panorama pictures of locations
auto_run<-"yes"
at_large_percent<-0
downtown_percent<-.7
greater_central_percent<-.3
metro_percent<-0
metro_distance<-100 #distance from metro stations, in feet
manhattan_percent<-.43
brooklyn_percent<-.32
queens_percent<-.12
bronx_percent<-.03
subway_percent<-.10
subway_distance<-100 #distance from subway stations, in feet
code_base<-paste0("C:/Users/jwest/github/geoguessr_cities/")
output_location<-paste0("C:/Users/jwest/github/geoguessr_cities/",city,"/output/")
if (auto_run=="yes"){
source(paste0(code_base,"01_borders.R"))
source(paste0(code_base,"02_locations.R"))
source(paste0(code_base,"03_metadata.R"))
source(paste0(code_base,"04_images.R"))
}
library(tibble)
library(dplyr)
library(readr)
library(sf)
library(httr)
library(jsonlite)
library(purrr)
library(tidyverse)
library(janitor)
library(googlesheets4)
library(stringr)
library(geosphere)
library(leaflet)
library(magick)
library(metro)
library(gtfstools)
city <- "DC"        #DC or NYC
round_no <- 1
google_sheet_link<-"https://docs.google.com/spreadsheets/d/188wl-XhzJ0fz0TCU9zHMOKmARJes0_Is-VX1b9NZgAs/edit?usp=sharing"
pano<-"off" #on or off to save panorama pictures of locations
auto_run<-"yes"
at_large_percent<-.4
downtown_percent<-.2
greater_central_percent<-.3
metro_percent<-.1
metro_distance<-100 #distance from metro stations, in feet
manhattan_percent<-.43
brooklyn_percent<-.32
queens_percent<-.12
bronx_percent<-.03
subway_percent<-.10
subway_distance<-100 #distance from subway stations, in feet
code_base<-paste0("C:/Users/jwest/github/geoguessr_cities/")
output_location<-paste0("C:/Users/jwest/github/geoguessr_cities/",city,"/output/")
if (auto_run=="yes"){
source(paste0(code_base,"01_borders.R"))
source(paste0(code_base,"02_locations.R"))
source(paste0(code_base,"03_metadata.R"))
source(paste0(code_base,"04_images.R"))
}
source(paste0(code_base,"01_borders.R"))
metro
if (metro != 1) {
stop("Error: Sum of boroughs does not equal 100%")
}
if (city=="DC"){
at_large<-at_large_percent
downtown<-downtown_percent+at_large
greater_central<-greater_central_percent+downtown
metro<-metro_percent+greater_central
# if (metro != 1) {
#   stop("Error: Sum of boroughs does not equal 100%")
# }
at_large_coords <- matrix(c(
-77.119419, 38.934718,
-77.040882, 38.995841,
-76.909394, 38.892852,
-77.029331, 38.799234,
-77.027054, 38.855403,
-77.059426, 38.899524,
-77.092116, 38.906666,
-77.119419, 38.934718
), ncol = 2, byrow = TRUE)
downtown_coords <- matrix(c(
-77.045444, 38.911450,
-77.003304, 38.896285,
-77.003261, 38.885795,
-77.033344, 38.884692,
-77.039652, 38.887867,
-77.047162, 38.884158,
-77.056432, 38.893812,
-77.056861, 38.902398,
-77.045444, 38.911450
), ncol = 2, byrow = TRUE)
greater_central_coords <- matrix(c(
-77.071324, 38.904877,
-77.071323, 38.942876,
-77.027723, 38.945969,
-77.000524, 38.931387,
-76.983436, 38.899866,
-76.988088, 38.877886,
-77.020513, 38.875749,
-77.050640, 38.886504,
-77.057420, 38.901337,
-77.071324, 38.904877
), ncol = 2, byrow = TRUE)
}
if (city=="NYC"){
manhattan<-manhattan_percent
brooklyn<-brooklyn_percent+manhattan
queens<-queens_percent+brooklyn
bronx<-bronx_percent+queens
subway<-subway_percent+bronx
if (subway != 1) {
stop("Error: Sum of boroughs does not equal 100%")
}
manhattan_coords <- matrix(c(
-74.013875, 40.700163,
-74.024023, 40.704360,
-74.014279, 40.755175,
-73.927928, 40.878489,
-73.910015, 40.872770,
-73.934220, 40.834756,
-73.933159, 40.808281,
-73.927902, 40.796740,
-73.942641, 40.782089,
-73.940642, 40.775750,
-73.970457, 40.742866,
-73.969927, 40.728005,
-73.975405, 40.710730,
-74.013875, 40.700163
), ncol = 2, byrow = TRUE)
brooklyn_coords <- matrix(c(
-73.962692, 40.737428,
-73.929043, 40.727534,
-73.921881, 40.709394,
-73.895402, 40.681704,
-73.868821, 40.694847,
-73.855515, 40.642089,
-73.911528, 40.577762,
-74.013005, 40.570018,
-74.013976, 40.583109,
-74.001595, 40.582741,
-74.006693, 40.596383,
-74.031212, 40.603387,
-74.045535, 40.620895,
-74.018345, 40.663263,
-74.021016, 40.679282,
-73.996496, 40.704684,
-73.971977, 40.709469,
-73.962692, 40.737428
), ncol = 2, byrow = TRUE)
queens_coords <- matrix(c(
-73.967564, 40.736458,
-73.931842, 40.779854,
-73.909949, 40.792220,
-73.888406, 40.781261,
-73.887799, 40.767105,
-73.873233, 40.771977,
-73.850899, 40.759014,
-73.855754, 40.781445,
-73.861581, 40.786224,
-73.837061, 40.801662,
-73.771879, 40.798630,
-73.755856, 40.768024,
-73.751608, 40.783926,
-73.701719, 40.752578,
-73.700263, 40.739427,
-73.707789, 40.728022,
-73.730123, 40.722135,
-73.725025, 40.652367,
-73.743839, 40.643618,
-73.821883, 40.666261,
-73.822597, 40.647909,
-73.853239, 40.643285,
-73.869289, 40.694845,
-73.896493, 40.682682,
-73.922375, 40.709145,
-73.928582, 40.728072,
-73.967564, 40.736458
), ncol = 2, byrow = TRUE)
bronx_coords <- matrix(c(
-73.910848, 40.915267,
-73.819450, 40.888649,
-73.790025, 40.804987,
-73.912296, 40.796159,
-73.928312, 40.802131,
-73.933776, 40.810322,
-73.934095, 40.834624,
-73.909793, 40.872164,
-73.925643, 40.878535,
-73.910848, 40.915267
), ncol = 2, byrow = TRUE)
if (subway_percent>0){
temp_file <- tempfile(fileext = ".zip")
download.file("http://web.mta.info/developers/data/nyct/subway/google_transit.zip", temp_file)
gtfs_data <- read_gtfs(temp_file)
}
}
source(paste0(code_base,"02_locations.R"))
source(paste0(code_base,"03_metadata.R"))
source(paste0(code_base,"04_images.R"))
